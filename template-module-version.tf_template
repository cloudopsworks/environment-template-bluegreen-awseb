##
# (c) 2021 - CloudopsWorks OÃœ - https://docs.cloudops.works/
#

locals {
  MODULE_NAME = {
    release_name = "<RELEASE-NAME>"
    source_name      = "<CHART-NAME-ON-REPO"
    source_version   = "<VERSION>"
    solution_stack   = "SOLUTION_STACK"
    beanstalk_application       = "BEANSTALK APPLICATION WHERE TO BUILD"
    private_subnets = []
    # [
    #   "PRIVATE SUBNET LIST TO DEPLOY INSTANCE & APP",
    # ]

    public_subnets = []
    # [
    #   "PUBLIC SUBNET LIST TO DEPLOY INSTANCE & APP",
    # ]

    vpc_id = "VPC ID WHERE TO DEPLOY"

    server_types = []
    # [ 
    #   "SERVER TYPES LIST THIS WILL HELP TO ALLOCATE DEPLOY",
    # ]

    beanstalk_application          = "BEANSTALK APPLICATION WHERE TO BUILD"
    beanstalk_ec2_key              = "EXISITNG EC2 KEY (SSH)"
    beanstalk_ami_id               = "EXISITNG AMI TO BASE RUN"
    beanstalk_instance_port        = 8081
    beanstalk_enable_spot          = true
    beanstalk_default_retention    = 90
    beanstalk_instance_volume_size = 64
    beanstalk_instance_volume_type = "gp2"

    load_balancer_public             = false
    load_balancer_log_bucket         = local.load_balancer_log_bucket
    load_balancer_log_prefix         = "<RELEASE-NAME>"
    load_balancer_ssl_certificate_id = "EXISTING CERTIFICATE"
    load_balancer_alias              = "" # "OVERRIDE LB ALIAS"

    port_mappings = []
    # Sample:
    # [
    #   {
    #     name      = "default"
    #     from_port = 80
    #     to_port   = 8080
    #     protocol  = "HTTP"
    #   },
    #   {
    #     name             = "port443"
    #     from_port        = 443
    #     to_port          = 8443
    #     protocol         = "HTTPS"
    #     backend_protocol = "HTTPS"
    #   }
    # ]
  }
}

module "MODULE_NAME_version" {
  source           = "./modules/aws-elasticbeanstalk-versions"
  region           = var.region
  sts_assume_role  = var.sts_assume_role

  release_name     = local.MODULE_NAME.release_name
  source_name      = local.MODULE_NAME.source_name
  source_version   = local.MODULE_NAME.source_version
  namespace        = var.namespace
  solution_stack   = local.MODULE_NAME.solution_stack
  repository_owner = var.repository_owner

  application_versions_bucket = local.application_versions_bucket
  beanstalk_application       = local.MODULE_NAME.beanstalk_application
}

output "MODULE_NAME_current_version" {
  value = module.MODULE_NAME_version.outputs.application_version_label
}