##
# (c) 2021 - CloudopsWorks OÃœ - https://docs.cloudops.works/
#
name: Slash command on Continue Blue/Green
on:
  repository_dispatch:
    types:
      - continue-command
      - next-command
permissions:
  issues: write
  contents: write
  packages: read
  statuses: write
  pull-requests: write

jobs:
  checkpoint:
    runs-on: ubuntu-latest
    steps:
      # Install terraform
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      # Get pull request head
      - name: Get Pull Request HEAD Ref
        uses: actions/github-script@v4
        id: the_pull
        with:
          github-token: ${{secrets.BOT_TOKEN}}
          result-encoding: string
          script: |
            const pull_request_number = '${{ github.event.client_payload.slash_command.args.named.pull_request_number }}';
            const {data: thePull} = await github.pulls.get({
              pull_number: pull_request_number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            return thePull.head.ref;

      # Proceed with checkout of source with all the references (depth=0)  
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ steps.the_pull.outputs.result }}
          token: ${{ secrets.BOT_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
          GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Generate Version File
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
          GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          ref="${{ steps.the_pull.outputs.result }}"
          trimref="${ref%-v*[0-9]\.*[0-9]\.*[0-9]}"
          TARGET="${trimref##promote-}"
          current_ver=$(terraform output -raw ${TARGET}_current_version)
          echo "$current_ver"
          echo "TARGET=$TARGET" > VERSION
          echo "PINNED_VERSION=$current_ver" >> VERSION

      - name: Retrieve Labels for next step
        id: checkpoint
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.BOT_TOKEN}}
          script: |
            const pull_request_number = '${{ github.event.client_payload.slash_command.args.named.pull_request_number }}';
 
            const {data: pullLabels} = await github.issues.listLabelsOnIssue({
              issue_number: pull_request_number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const labels = pullLabels.map(label => label.name);

            const is_blue = labels.filter(aLabel => aLabel == 'blue').length == 1;
            const is_green = labels.filter(aLabel => aLabel == 'green').length == 1;
            const to_blue = labels.filter(aLabel => aLabel == 'blue-green/blue').length == 1;
            const to_green = labels.filter(aLabel => aLabel == 'blue-green/green').length == 1;
            const run_both = labels.filter(aLabel => aLabel == 'blue-green/both').length == 1;
            const switch_both = (is_blue && to_green) || (is_green && to_blue);

            const result = {
              is_blue: is_blue,
              is_green: is_green,
              to_blue: to_blue,
              to_green: to_green,
              run_both: run_both,
              switch_both: switch_both
            };

            return result;
      
      - name: Switch to both
        if: fromJSON(steps.checkpoint.outputs.result).switch_both
        run: |
          make deploy-bluegreen clean-blue clean-green
    
      - name: Blue Version PIN
        if: fromJSON(steps.checkpoint.outputs.result).is_blue && fromJSON(steps.checkpoint.outputs.result).switch_both
        run: |
          make -n blueversion-pin
          make blueversion-pin

      - name: Green Version PIN
        if: fromJSON(steps.checkpoint.outputs.result).is_green && fromJSON(steps.checkpoint.outputs.result).switch_both
        run: |
          make greenversion-pin

      - name: Switch to Green
        if: fromJSON(steps.checkpoint.outputs.result).to_green && fromJSON(steps.checkpoint.outputs.result).run_both
        run: |
          make deploy-green clean-both

      - name: Switch to blue
        if: fromJSON(steps.checkpoint.outputs.result).to_blue && fromJSON(steps.checkpoint.outputs.result).run_both
        run: |
          make deploy-blue clean-both

      - name: Terraform fmt
        id: fmt
        run: terraform fmt

      - name: Push change to branch
        run: |
          git add .
          git config --global user.name "${{ secrets.BOT_USER }}"
          git config --global user.email "${{ secrets.BOT_EMAIL }}"
          git commit -a -m "chore: Pushing changes for this step."

      - name: Label entry at proper step
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.BOT_TOKEN}}
          script: |
            const checkpoint = JSON.parse('${{ steps.checkpoint.outputs.result }}');
            const pull_request_number = '${{ github.event.client_payload.slash_command.args.named.pull_request_number }}';

            const {data: pullLabels} = await github.issues.listLabelsOnIssue({
              issue_number: pull_request_number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const labels = pullLabels.map(label => label.name);

            if ( checkpoint.switch_both ) {
              if ( labels.filter(aLabel => aLabel == 'blue').length == 1 ) {
                github.issues.removeLabel({
                  issue_number: pull_request_number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: 'blue'
                });
              }
              if ( labels.filter(aLabel => aLabel == 'green').length == 1 ) {
                github.issues.removeLabel({
                  issue_number: pull_request_number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: 'green'
                });
              }
              github.issues.addLabels({
                issue_number: pull_request_number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: [ 'blue-green/both' ]
              });
            }
